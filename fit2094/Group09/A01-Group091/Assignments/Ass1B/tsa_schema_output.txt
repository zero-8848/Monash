SQL> 
SQL> -- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
SQL> --   at:        2023-01-03 19:44:37 AEDT
SQL> --   site:      Oracle Database 12c
SQL> --   type:      Oracle Database 12c
SQL> 
SQL> 
SQL> 
SQL> DROP TABLE booking CASCADE CONSTRAINTS;

Table BOOKING dropped.

SQL> 
SQL> DROP TABLE company CASCADE CONSTRAINTS;

Table COMPANY dropped.

SQL> 
SQL> DROP TABLE holiday_rate CASCADE CONSTRAINTS;

Table HOLIDAY_RATE dropped.

SQL> 
SQL> DROP TABLE member CASCADE CONSTRAINTS;

Table MEMBER dropped.

SQL> 
SQL> DROP TABLE membership_fee CASCADE CONSTRAINTS;

Table MEMBERSHIP_FEE dropped.

SQL> 
SQL> DROP TABLE poi CASCADE CONSTRAINTS;

Table POI dropped.

SQL> 
SQL> DROP TABLE resort CASCADE CONSTRAINTS;

Table RESORT dropped.

SQL> 
SQL> DROP TABLE resort_maintenance CASCADE CONSTRAINTS;

Table RESORT_MAINTENANCE dropped.

SQL> 
SQL> DROP TABLE review CASCADE CONSTRAINTS;

Table REVIEW dropped.

SQL> 
SQL> DROP TABLE town CASCADE CONSTRAINTS;

Table TOWN dropped.

SQL> 
SQL> DROP TABLE unit CASCADE CONSTRAINTS;

Table UNIT dropped.

SQL> 
SQL> -- predefined type, no DDL - MDSYS.SDO_GEOMETRY
SQL> 
SQL> -- predefined type, no DDL - XMLTYPE
SQL> 
SQL> CREATE TABLE booking (
  2      booking_no          NUMBER(7) NOT NULL,
  3      booking_start_date  DATE NOT NULL,
  4      booking_end_date    DATE NOT NULL,
  5      booking_point_cost  NUMBER NOT NULL,
  6      booking_no_adult    NUMBER(2) NOT NULL,
  7      booking_no_children NUMBER(2) NOT NULL,
  8      unit_no             NUMBER(4) NOT NULL,
  9      resort_id           NUMBER(7) NOT NULL,
 10      member_no           NUMBER(2) NOT NULL,
 11      resort_id1          NUMBER(7) NOT NULL
 12  );

Table BOOKING created.

SQL> 
SQL> COMMENT ON COLUMN booking.booking_no IS
  2      'Surrogate key for booking.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.booking_start_date IS
  2      'The start date of a member booking';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.booking_end_date IS
  2      'The end date of a member booking';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.booking_no_adult IS
  2      'The number of adults';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.booking_no_children IS
  2      'The number of children';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.unit_no IS
  2      'The unique number for each unit in a resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.member_no IS
  2      'member number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN booking.resort_id1 IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( booking_no );

Table BOOKING altered.

SQL> 
SQL> ALTER TABLE booking
  2      ADD CONSTRAINT booking_nk UNIQUE ( booking_start_date,
  3                                         unit_no,
  4                                         resort_id );

Table BOOKING altered.

SQL> 
SQL> CREATE TABLE company (
  2      comp_abn      CHAR(11) NOT NULL,
  3      comp_name     VARCHAR2(20) NOT NULL,
  4      comp_address  VARCHAR2(50) NOT NULL,
  5      comp_phone    CHAR(10) NOT NULL,
  6      comp_ceo_name VARCHAR2(20) NOT NULL
  7  );

Table COMPANY created.

SQL> 
SQL> COMMENT ON COLUMN company.comp_abn IS
  2      'The ABN for a company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN company.comp_name IS
  2      'The name of a company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN company.comp_address IS
  2      'The address of a company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN company.comp_phone IS
  2      'The phone number of a company';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN company.comp_ceo_name IS
  2      'The ceo''s name of a company';

Comment created.

SQL> 
SQL> ALTER TABLE company ADD CONSTRAINT company_pk PRIMARY KEY ( comp_abn );

Table COMPANY altered.

SQL> 
SQL> CREATE TABLE holiday_rate (
  2      holiday_rate_no          NUMBER(6) NOT NULL,
  3      holiday_rate             CHAR(1) NOT NULL,
  4      holiday_point_for_a_week NUMBER(7) NOT NULL,
  5      unit_no                  NUMBER(4) NOT NULL,
  6      resort_id                NUMBER(7) NOT NULL
  7  );

Table HOLIDAY_RATE created.

SQL> 
SQL> ALTER TABLE holiday_rate
  2      ADD CONSTRAINT chk_season CHECK ( holiday_rate IN ( 'O', 'P', 'S' ) );

Table HOLIDAY_RATE altered.

SQL> 
SQL> COMMENT ON COLUMN holiday_rate.holiday_rate_no IS
  2      'Surrogate key for holiday rate.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN holiday_rate.holiday_rate IS
  2      'P for peak season
  3  O for off season
  4  S for school holiday';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN holiday_rate.holiday_point_for_a_week IS
  2      'The point cost for a week';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN holiday_rate.unit_no IS
  2      'The unique number for each unit in a resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN holiday_rate.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> ALTER TABLE holiday_rate ADD CONSTRAINT holiday_rate_pk PRIMARY KEY ( holiday_rate_no
  2  );

Table HOLIDAY_RATE altered.

SQL> 
SQL> ALTER TABLE holiday_rate
  2      ADD CONSTRAINT holiday_rate_nkv1 UNIQUE ( holiday_rate,
  3                                                unit_no,
  4                                                resort_id );

Table HOLIDAY_RATE altered.

SQL> 
SQL> CREATE TABLE member (
  2      member_no          NUMBER(2) NOT NULL,
  3      resort_id          NUMBER(7) NOT NULL,
  4      member_name        VARCHAR2(20) NOT NULL,
  5      member_email       VARCHAR2(255) NOT NULL,
  6      member_phone       VARCHAR2(20) NOT NULL,
  7      member_point       NUMBER(7) NOT NULL,
  8      member_date_joined DATE NOT NULL,
  9      member_address     VARCHAR2(50) NOT NULL,
 10      member_no1         NUMBER(2),
 11      resort_id1         NUMBER(7)
 12  );

Table MEMBER created.

SQL> 
SQL> COMMENT ON COLUMN member.member_no IS
  2      'member number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_name IS
  2      'The name of member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_email IS
  2      'The e-mail of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_phone IS
  2      'The phone number of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_point IS
  2      'The points of a member';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_date_joined IS
  2      'The date the member joined / signed up for the resort.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_address IS
  2      'The member''s home address.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.member_no1 IS
  2      'member number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN member.resort_id1 IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_no,
  2                                                            resort_id );

Table MEMBER altered.

SQL> 
SQL> CREATE TABLE membership_fee (
  2      membership_fee_no      NUMBER(6) NOT NULL,
  3      member_fee_year        CHAR(4) NOT NULL,
  4      member_maintenance_fee NUMBER(6),
  5      member_annual_man_fee  NUMBER(6),
  6      member_total_charge    NUMBER(5) NOT NULL,
  7      member_date_paid       DATE,
  8      member_no              NUMBER(2) NOT NULL,
  9      resort_id              NUMBER(7) NOT NULL
 10  );

Table MEMBERSHIP_FEE created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.membership_fee_no IS
  2      'Surrogate key for membership fee';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_fee_year IS
  2      'The year that fee charged';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_maintenance_fee IS
  2      'The member''s maintenance fee.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_annual_man_fee IS
  2      'The annual fee charged to members.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_total_charge IS
  2      'Total fee charged to member ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_date_paid IS
  2      'The date that the member paid fees';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.member_no IS
  2      'member number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN membership_fee.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> ALTER TABLE membership_fee ADD CONSTRAINT membership_fee_pk PRIMARY KEY ( membership_fee_no
  2  );

Table MEMBERSHIP_FEE altered.

SQL> 
SQL> ALTER TABLE membership_fee
  2      ADD CONSTRAINT membership_fee_nk UNIQUE ( member_fee_year,
  3                                                member_no,
  4                                                resort_id );

Table MEMBERSHIP_FEE altered.

SQL> 
SQL> CREATE TABLE poi (
  2      poi_id            NUMBER(7) NOT NULL,
  3      town_id           CHAR(4) NOT NULL,
  4      poi_address       VARCHAR2(50) NOT NULL,
  5      poi_name          VARCHAR2(50) NOT NULL,
  6      poi_opentime      DATE NOT NULL,
  7      poi__closetime    DATE NOT NULL,
  8      poi_description   VARCHAR2(500) NOT NULL,
  9      poi_facility_type VARCHAR2(20) NOT NULL
 10  );

Table POI created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi_id IS
  2      'Surrogate key of POI';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.town_id IS
  2      'Unique id for each town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi_name IS
  2      'The name of interest point';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi_opentime IS
  2      'Open time of interest point';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi__closetime IS
  2      'Close time of interest point';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi_description IS
  2      'The description of interest point';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN poi.poi_facility_type IS
  2      'The type of interest point';

Comment created.

SQL> 
SQL> ALTER TABLE poi ADD CONSTRAINT interest_point_pk PRIMARY KEY ( poi_id );

Table POI altered.

SQL> 
SQL> ALTER TABLE poi
  2      ADD CONSTRAINT poi_nk UNIQUE ( poi_name,
  3                                     poi_address,
  4                                     town_id );

Table POI altered.

SQL> 
SQL> CREATE TABLE resort (
  2      resort_id          NUMBER(7) NOT NULL,
  3      resort_name        VARCHAR2(20) NOT NULL,
  4      resort_address     VARCHAR2(50) NOT NULL,
  5      resort_phone       CHAR(8) NOT NULL,
  6      resort_date_funded DATE NOT NULL,
  7      resort_point_cost  NUMBER(7) NOT NULL,
  8      town_id            CHAR(4) NOT NULL,
  9      comp_abn           CHAR(11) NOT NULL
 10  );

Table RESORT created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_name IS
  2      'The name of resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_address IS
  2      'The address for a resort.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_phone IS
  2      'Phone number (AU) of the resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_date_funded IS
  2      'The date of resort is funded by the company.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.resort_point_cost IS
  2      'The cost to buy points at that resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.town_id IS
  2      'Unique id for each town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort.comp_abn IS
  2      'The ABN for a company';

Comment created.

SQL> 
SQL> ALTER TABLE resort ADD CONSTRAINT resort_pk PRIMARY KEY ( resort_id );

Table RESORT altered.

SQL> 
SQL> CREATE TABLE resort_maintenance (
  2      maintenance_id   NUMBER(6) NOT NULL,
  3      maintenance_date DATE NOT NULL,
  4      maintenance_type VARCHAR2(50),
  5      maintennace_cost NUMBER(4),
  6      unit_no          NUMBER(4) NOT NULL,
  7      resort_id        NUMBER(7) NOT NULL
  8  );

Table RESORT_MAINTENANCE created.

SQL> 
SQL> ALTER TABLE resort_maintenance
  2      ADD CONSTRAINT type_of_maintenance CHECK ( maintenance_type IN ( 'Media refit', 'Other'
  3      , 'Recarpet', 'Repaint', 'Whitegoods Refit' ) );

Table RESORT_MAINTENANCE altered.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.maintenance_id IS
  2      'Surrogate key for resort maintenance.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.maintenance_date IS
  2      'The date maintenance was carried out.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.maintenance_type IS
  2      'type of maintenance conducted';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.maintennace_cost IS
  2      'cost of maintenance';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.unit_no IS
  2      'The unique number for each unit in a resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN resort_maintenance.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> ALTER TABLE resort_maintenance ADD CONSTRAINT resort_maintenance_pk PRIMARY KEY ( maintenance_id
  2  );

Table RESORT_MAINTENANCE altered.

SQL> 
SQL> ALTER TABLE resort_maintenance
  2      ADD CONSTRAINT resort_mainmtenance_nk UNIQUE ( maintenance_date,
  3                                                     unit_no,
  4                                                     resort_id );

Table RESORT_MAINTENANCE altered.

SQL> 
SQL> CREATE TABLE review (
  2      review_id       NUMBER(7) NOT NULL,
  3      review_datetime DATE NOT NULL,
  4      member_no       NUMBER(2) NOT NULL,
  5      resort_id       NUMBER(7) NOT NULL,
  6      review_rating   CHAR(1) NOT NULL,
  7      review_comment  VARCHAR2(500),
  8      poi_id          NUMBER(7) NOT NULL
  9  );

Table REVIEW created.

SQL> 
SQL> ALTER TABLE review
  2      ADD CONSTRAINT chk_rating CHECK ( review_rating IN ( '1', '2', '3', '4', '5' ) );

Table REVIEW altered.

SQL> 
SQL> COMMENT ON COLUMN review.review_id IS
  2      'Surrogate key to identify review.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.review_datetime IS
  2      'The date and time member review for POI was created. ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.member_no IS
  2      'member number';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.review_rating IS
  2      'The rating of each review';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.review_comment IS
  2      'Member review comment for POI
  3  ';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN review.poi_id IS
  2      'Surrogate key of POI';

Comment created.

SQL> 
SQL> ALTER TABLE review ADD CONSTRAINT review_pk PRIMARY KEY ( review_id );

Table REVIEW altered.

SQL> 
SQL> ALTER TABLE review
  2      ADD CONSTRAINT review_nk UNIQUE ( review_datetime,
  3                                        member_no,
  4                                        resort_id );

Table REVIEW altered.

SQL> 
SQL> CREATE TABLE town (
  2      town_id          CHAR(4) NOT NULL,
  3      town_latitude    NUMBER(10, 7) NOT NULL,
  4      town_longitude   NUMBER(10, 7) NOT NULL,
  5      town_name        VARCHAR2(20) NOT NULL,
  6      town_population  NUMBER(9) NOT NULL,
  7      town_summer_temp NUMBER(2) NOT NULL,
  8      town_winter_temp NUMBER(2) NOT NULL,
  9      town_state       CHAR(3) NOT NULL
 10  );

Table TOWN created.

SQL> 
SQL> COMMENT ON COLUMN town.town_id IS
  2      'Unique id for each town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_latitude IS
  2      'town latitude';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_longitude IS
  2      'town longitude';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_name IS
  2      'the name of town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_population IS
  2      'the population of the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_summer_temp IS
  2      'Average temperature for summer, stored in celcius, rounded to nearest degree.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_winter_temp IS
  2      'Average temperature for winter, stored in celcius, rounded to nearest degree.';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN town.town_state IS
  2      'Town code in three-letter format';

Comment created.

SQL> 
SQL> ALTER TABLE town ADD CONSTRAINT town_pk PRIMARY KEY ( town_id );

Table TOWN altered.

SQL> 
SQL> CREATE TABLE unit (
  2      unit_no          NUMBER(4) NOT NULL,
  3      resort_id        NUMBER(7) NOT NULL,
  4      unit_type        VARCHAR2(20) NOT NULL,
  5      unit_capacity    CHAR(2) NOT NULL,
  6      unit_description VARCHAR2(50) NOT NULL,
  7      unit_bedroom     CHAR(2) NOT NULL
  8  );

Table UNIT created.

SQL> 
SQL> COMMENT ON COLUMN unit.unit_no IS
  2      'The unique number for each unit in a resort';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN unit.resort_id IS
  2      'Unique id for each resort in the town';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN unit.unit_type IS
  2      'The type of a unit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN unit.unit_capacity IS
  2      'The units sleeping capacity';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN unit.unit_description IS
  2      'The description of a unit';

Comment created.

SQL> 
SQL> COMMENT ON COLUMN unit.unit_bedroom IS
  2      'The number of bedrooms';

Comment created.

SQL> 
SQL> ALTER TABLE unit ADD CONSTRAINT unit_pk PRIMARY KEY ( unit_no,
  2                                                        resort_id );

Table UNIT altered.

SQL> 
SQL> ALTER TABLE booking
  2      ADD CONSTRAINT booking_unit FOREIGN KEY ( unit_no,
  3                                                resort_id )
  4          REFERENCES unit ( unit_no,
  5                            resort_id );

Table BOOKING altered.

SQL> 
SQL> ALTER TABLE resort
  2      ADD CONSTRAINT company_rsort FOREIGN KEY ( comp_abn )
  3          REFERENCES company ( comp_abn );

Table RESORT altered.

SQL> 
SQL> ALTER TABLE holiday_rate
  2      ADD CONSTRAINT holiday_rate_unit FOREIGN KEY ( unit_no,
  3                                                     resort_id )
  4          REFERENCES unit ( unit_no,
  5                            resort_id );

Table HOLIDAY_RATE altered.

SQL> 
SQL> ALTER TABLE poi
  2      ADD CONSTRAINT interest_point_town FOREIGN KEY ( town_id )
  3          REFERENCES town ( town_id );

Table POI altered.

SQL> 
SQL> ALTER TABLE member
  2      ADD CONSTRAINT member_member FOREIGN KEY ( member_no1,
  3                                                 resort_id1 )
  4          REFERENCES member ( member_no,
  5                              resort_id );

Table MEMBER altered.

SQL> 
SQL> ALTER TABLE membership_fee
  2      ADD CONSTRAINT member_membership_fee FOREIGN KEY ( member_no,
  3                                                         resort_id )
  4          REFERENCES member ( member_no,
  5                              resort_id );

Table MEMBERSHIP_FEE altered.

SQL> 
SQL> ALTER TABLE review
  2      ADD CONSTRAINT member_review FOREIGN KEY ( member_no,
  3                                                 resort_id )
  4          REFERENCES member ( member_no,
  5                              resort_id );

Table REVIEW altered.

SQL> 
SQL> ALTER TABLE member
  2      ADD CONSTRAINT memebr_resort FOREIGN KEY ( resort_id )
  3          REFERENCES resort ( resort_id );

Table MEMBER altered.

SQL> 
SQL> ALTER TABLE review
  2      ADD CONSTRAINT poi_review FOREIGN KEY ( poi_id )
  3          REFERENCES poi ( poi_id );

Table REVIEW altered.

SQL> 
SQL> ALTER TABLE booking
  2      ADD CONSTRAINT relation_18 FOREIGN KEY ( member_no,
  3                                               resort_id1 )
  4          REFERENCES member ( member_no,
  5                              resort_id );

Table BOOKING altered.

SQL> 
SQL> ALTER TABLE unit
  2      ADD CONSTRAINT relation_20 FOREIGN KEY ( resort_id )
  3          REFERENCES resort ( resort_id );

Table UNIT altered.

SQL> 
SQL> ALTER TABLE resort
  2      ADD CONSTRAINT town_resort FOREIGN KEY ( town_id )
  3          REFERENCES town ( town_id );

Table RESORT altered.

SQL> 
SQL> ALTER TABLE resort_maintenance
  2      ADD CONSTRAINT unit_resort_maintenance FOREIGN KEY ( unit_no,
  3                                                           resort_id )
  4          REFERENCES unit ( unit_no,
  5                            resort_id );

Table RESORT_MAINTENANCE altered.

SQL> 
SQL> 
SQL> 
SQL> -- Oracle SQL Developer Data Modeler Summary Report: 
SQL> -- 
SQL> -- CREATE TABLE                            11
SQL> -- CREATE INDEX                             0
SQL> -- ALTER TABLE                             33
SQL> -- CREATE VIEW                              0
SQL> -- ALTER VIEW                               0
SQL> -- CREATE PACKAGE                           0
SQL> -- CREATE PACKAGE BODY                      0
SQL> -- CREATE PROCEDURE                         0
SQL> -- CREATE FUNCTION                          0
SQL> -- CREATE TRIGGER                           0
SQL> -- ALTER TRIGGER                            0
SQL> -- CREATE COLLECTION TYPE                   0
SQL> -- CREATE STRUCTURED TYPE                   0
SQL> -- CREATE STRUCTURED TYPE BODY              0
SQL> -- CREATE CLUSTER                           0
SQL> -- CREATE CONTEXT                           0
SQL> -- CREATE DATABASE                          0
SQL> -- CREATE DIMENSION                         0
SQL> -- CREATE DIRECTORY                         0
SQL> -- CREATE DISK GROUP                        0
SQL> -- CREATE ROLE                              0
SQL> -- CREATE ROLLBACK SEGMENT                  0
SQL> -- CREATE SEQUENCE                          0
SQL> -- CREATE MATERIALIZED VIEW                 0
SQL> -- CREATE MATERIALIZED VIEW LOG             0
SQL> -- CREATE SYNONYM                           0
SQL> -- CREATE TABLESPACE                        0
SQL> -- CREATE USER                              0
SQL> -- 
SQL> -- DROP TABLESPACE                          0
SQL> -- DROP DATABASE                            0
SQL> -- 
SQL> -- REDACTION POLICY                         0
SQL> -- TSDP POLICY                              0
SQL> -- 
SQL> -- ORDS DROP SCHEMA                         0
SQL> -- ORDS ENABLE SCHEMA                       0
SQL> -- ORDS ENABLE OBJECT                       0
SQL> -- 
SQL> -- ERRORS                                   0
SQL> -- WARNINGS                                 0
SQL> 
SQL> 
SQL> SPOOL OFF

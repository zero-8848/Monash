--student id: 32502818
--student name: Kimberly Nofi Kurniawan
--student id:29287073
--student name:JIHZOU JIA
--student id:32350686
--student name:Zirui Liu
-- Capture run of script in file called custorders_schema_output.txt

SET ECHO ON 
SPOOL tsa_schema_output.txt

-- Generated by Oracle SQL Developer Data Modeler 22.2.0.165.1149
--   at:        2023-01-03 19:44:37 AEDT
--   site:      Oracle Database 12c
--   type:      Oracle Database 12c



DROP TABLE booking CASCADE CONSTRAINTS;

DROP TABLE company CASCADE CONSTRAINTS;

DROP TABLE holiday_rate CASCADE CONSTRAINTS;

DROP TABLE member CASCADE CONSTRAINTS;

DROP TABLE membership_fee CASCADE CONSTRAINTS;

DROP TABLE poi CASCADE CONSTRAINTS;

DROP TABLE resort CASCADE CONSTRAINTS;

DROP TABLE resort_maintenance CASCADE CONSTRAINTS;

DROP TABLE review CASCADE CONSTRAINTS;

DROP TABLE town CASCADE CONSTRAINTS;

DROP TABLE unit CASCADE CONSTRAINTS;

-- predefined type, no DDL - MDSYS.SDO_GEOMETRY

-- predefined type, no DDL - XMLTYPE

CREATE TABLE booking (
    booking_no          NUMBER(7) NOT NULL,
    booking_start_date  DATE NOT NULL,
    booking_end_date    DATE NOT NULL,
    booking_point_cost  NUMBER NOT NULL,
    booking_no_adult    NUMBER(2) NOT NULL,
    booking_no_children NUMBER(2) NOT NULL,
    unit_no             NUMBER(4) NOT NULL,
    resort_id           NUMBER(7) NOT NULL,
    member_no           NUMBER(2) NOT NULL,
    resort_id1          NUMBER(7) NOT NULL
);

COMMENT ON COLUMN booking.booking_no IS
    'Surrogate key for booking.';

COMMENT ON COLUMN booking.booking_start_date IS
    'The start date of a member booking';

COMMENT ON COLUMN booking.booking_end_date IS
    'The end date of a member booking';

COMMENT ON COLUMN booking.booking_no_adult IS
    'The number of adults';

COMMENT ON COLUMN booking.booking_no_children IS
    'The number of children';

COMMENT ON COLUMN booking.unit_no IS
    'The unique number for each unit in a resort';

COMMENT ON COLUMN booking.resort_id IS
    'Unique id for each resort in the town';

COMMENT ON COLUMN booking.member_no IS
    'member number';

COMMENT ON COLUMN booking.resort_id1 IS
    'Unique id for each resort in the town';

ALTER TABLE booking ADD CONSTRAINT booking_pk PRIMARY KEY ( booking_no );

ALTER TABLE booking
    ADD CONSTRAINT booking_nk UNIQUE ( booking_start_date,
                                       unit_no,
                                       resort_id );

CREATE TABLE company (
    comp_abn      CHAR(11) NOT NULL,
    comp_name     VARCHAR2(20) NOT NULL,
    comp_address  VARCHAR2(50) NOT NULL,
    comp_phone    CHAR(10) NOT NULL,
    comp_ceo_name VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN company.comp_abn IS
    'The ABN for a company';

COMMENT ON COLUMN company.comp_name IS
    'The name of a company';

COMMENT ON COLUMN company.comp_address IS
    'The address of a company';

COMMENT ON COLUMN company.comp_phone IS
    'The phone number of a company';

COMMENT ON COLUMN company.comp_ceo_name IS
    'The ceo''s name of a company';

ALTER TABLE company ADD CONSTRAINT company_pk PRIMARY KEY ( comp_abn );

CREATE TABLE holiday_rate (
    holiday_rate_no          NUMBER(6) NOT NULL,
    holiday_rate             CHAR(1) NOT NULL,
    holiday_point_for_a_week NUMBER(7) NOT NULL,
    unit_no                  NUMBER(4) NOT NULL,
    resort_id                NUMBER(7) NOT NULL
);

ALTER TABLE holiday_rate
    ADD CONSTRAINT chk_season CHECK ( holiday_rate IN ( 'O', 'P', 'S' ) );

COMMENT ON COLUMN holiday_rate.holiday_rate_no IS
    'Surrogate key for holiday rate.';

COMMENT ON COLUMN holiday_rate.holiday_rate IS
    'P for peak season
O for off season
S for school holiday';

COMMENT ON COLUMN holiday_rate.holiday_point_for_a_week IS
    'The point cost for a week';

COMMENT ON COLUMN holiday_rate.unit_no IS
    'The unique number for each unit in a resort';

COMMENT ON COLUMN holiday_rate.resort_id IS
    'Unique id for each resort in the town';

ALTER TABLE holiday_rate ADD CONSTRAINT holiday_rate_pk PRIMARY KEY ( holiday_rate_no
);

ALTER TABLE holiday_rate
    ADD CONSTRAINT holiday_rate_nkv1 UNIQUE ( holiday_rate,
                                              unit_no,
                                              resort_id );

CREATE TABLE member (
    member_no          NUMBER(2) NOT NULL,
    resort_id          NUMBER(7) NOT NULL,
    member_name        VARCHAR2(20) NOT NULL,
    member_email       VARCHAR2(255) NOT NULL,
    member_phone       VARCHAR2(20) NOT NULL,
    member_point       NUMBER(7) NOT NULL,
    member_date_joined DATE NOT NULL,
    member_address     VARCHAR2(50) NOT NULL,
    member_no1         NUMBER(2),
    resort_id1         NUMBER(7)
);

COMMENT ON COLUMN member.member_no IS
    'member number';

COMMENT ON COLUMN member.resort_id IS
    'Unique id for each resort in the town';

COMMENT ON COLUMN member.member_name IS
    'The name of member';

COMMENT ON COLUMN member.member_email IS
    'The e-mail of a member';

COMMENT ON COLUMN member.member_phone IS
    'The phone number of a member';

COMMENT ON COLUMN member.member_point IS
    'The points of a member';

COMMENT ON COLUMN member.member_date_joined IS
    'The date the member joined / signed up for the resort.';

COMMENT ON COLUMN member.member_address IS
    'The member''s home address.';

COMMENT ON COLUMN member.member_no1 IS
    'member number';

COMMENT ON COLUMN member.resort_id1 IS
    'Unique id for each resort in the town';

ALTER TABLE member ADD CONSTRAINT member_pk PRIMARY KEY ( member_no,
                                                          resort_id );

CREATE TABLE membership_fee (
    membership_fee_no      NUMBER(6) NOT NULL,
    member_fee_year        CHAR(4) NOT NULL,
    member_maintenance_fee NUMBER(6),
    member_annual_man_fee  NUMBER(6),
    member_total_charge    NUMBER(5) NOT NULL,
    member_date_paid       DATE,
    member_no              NUMBER(2) NOT NULL,
    resort_id              NUMBER(7) NOT NULL
);

COMMENT ON COLUMN membership_fee.membership_fee_no IS
    'Surrogate key for membership fee';

COMMENT ON COLUMN membership_fee.member_fee_year IS
    'The year that fee charged';

COMMENT ON COLUMN membership_fee.member_maintenance_fee IS
    'The member''s maintenance fee.';

COMMENT ON COLUMN membership_fee.member_annual_man_fee IS
    'The annual fee charged to members.';

COMMENT ON COLUMN membership_fee.member_total_charge IS
    'Total fee charged to member ';

COMMENT ON COLUMN membership_fee.member_date_paid IS
    'The date that the member paid fees';

COMMENT ON COLUMN membership_fee.member_no IS
    'member number';

COMMENT ON COLUMN membership_fee.resort_id IS
    'Unique id for each resort in the town';

ALTER TABLE membership_fee ADD CONSTRAINT membership_fee_pk PRIMARY KEY ( membership_fee_no
);

ALTER TABLE membership_fee
    ADD CONSTRAINT membership_fee_nk UNIQUE ( member_fee_year,
                                              member_no,
                                              resort_id );

CREATE TABLE poi (
    poi_id            NUMBER(7) NOT NULL,
    town_id           CHAR(4) NOT NULL,
    poi_address       VARCHAR2(50) NOT NULL,
    poi_name          VARCHAR2(50) NOT NULL,
    poi_opentime      DATE NOT NULL,
    poi__closetime    DATE NOT NULL,
    poi_description   VARCHAR2(500) NOT NULL,
    poi_facility_type VARCHAR2(20) NOT NULL
);

COMMENT ON COLUMN poi.poi_id IS
    'Surrogate key of POI';

COMMENT ON COLUMN poi.town_id IS
    'Unique id for each town';

COMMENT ON COLUMN poi.poi_name IS
    'The name of interest point';

COMMENT ON COLUMN poi.poi_opentime IS
    'Open time of interest point';

COMMENT ON COLUMN poi.poi__closetime IS
    'Close time of interest point';

COMMENT ON COLUMN poi.poi_description IS
    'The description of interest point';

COMMENT ON COLUMN poi.poi_facility_type IS
    'The type of interest point';

ALTER TABLE poi ADD CONSTRAINT interest_point_pk PRIMARY KEY ( poi_id );

ALTER TABLE poi
    ADD CONSTRAINT poi_nk UNIQUE ( poi_name,
                                   poi_address,
                                   town_id );

CREATE TABLE resort (
    resort_id          NUMBER(7) NOT NULL,
    resort_name        VARCHAR2(20) NOT NULL,
    resort_address     VARCHAR2(50) NOT NULL,
    resort_phone       CHAR(8) NOT NULL,
    resort_date_funded DATE NOT NULL,
    resort_point_cost  NUMBER(7) NOT NULL,
    town_id            CHAR(4) NOT NULL,
    comp_abn           CHAR(11) NOT NULL
);

COMMENT ON COLUMN resort.resort_id IS
    'Unique id for each resort in the town';

COMMENT ON COLUMN resort.resort_name IS
    'The name of resort';

COMMENT ON COLUMN resort.resort_address IS
    'The address for a resort.';

COMMENT ON COLUMN resort.resort_phone IS
    'Phone number (AU) of the resort';

COMMENT ON COLUMN resort.resort_date_funded IS
    'The date of resort is funded by the company.';

COMMENT ON COLUMN resort.resort_point_cost IS
    'The cost to buy points at that resort';

COMMENT ON COLUMN resort.town_id IS
    'Unique id for each town';

COMMENT ON COLUMN resort.comp_abn IS
    'The ABN for a company';

ALTER TABLE resort ADD CONSTRAINT resort_pk PRIMARY KEY ( resort_id );

CREATE TABLE resort_maintenance (
    maintenance_id   NUMBER(6) NOT NULL,
    maintenance_date DATE NOT NULL,
    maintenance_type VARCHAR2(50),
    maintennace_cost NUMBER(4),
    unit_no          NUMBER(4) NOT NULL,
    resort_id        NUMBER(7) NOT NULL
);

ALTER TABLE resort_maintenance
    ADD CONSTRAINT type_of_maintenance CHECK ( maintenance_type IN ( 'Media refit', 'Other'
    , 'Recarpet', 'Repaint', 'Whitegoods Refit' ) );

COMMENT ON COLUMN resort_maintenance.maintenance_id IS
    'Surrogate key for resort maintenance.';

COMMENT ON COLUMN resort_maintenance.maintenance_date IS
    'The date maintenance was carried out.';

COMMENT ON COLUMN resort_maintenance.maintenance_type IS
    'type of maintenance conducted';

COMMENT ON COLUMN resort_maintenance.maintennace_cost IS
    'cost of maintenance';

COMMENT ON COLUMN resort_maintenance.unit_no IS
    'The unique number for each unit in a resort';

COMMENT ON COLUMN resort_maintenance.resort_id IS
    'Unique id for each resort in the town';

ALTER TABLE resort_maintenance ADD CONSTRAINT resort_maintenance_pk PRIMARY KEY ( maintenance_id
);

ALTER TABLE resort_maintenance
    ADD CONSTRAINT resort_mainmtenance_nk UNIQUE ( maintenance_date,
                                                   unit_no,
                                                   resort_id );

CREATE TABLE review (
    review_id       NUMBER(7) NOT NULL,
    review_datetime DATE NOT NULL,
    member_no       NUMBER(2) NOT NULL,
    resort_id       NUMBER(7) NOT NULL,
    review_rating   CHAR(1) NOT NULL,
    review_comment  VARCHAR2(500),
    poi_id          NUMBER(7) NOT NULL
);

ALTER TABLE review
    ADD CONSTRAINT chk_rating CHECK ( review_rating IN ( '1', '2', '3', '4', '5' ) );

COMMENT ON COLUMN review.review_id IS
    'Surrogate key to identify review.';

COMMENT ON COLUMN review.review_datetime IS
    'The date and time member review for POI was created. ';

COMMENT ON COLUMN review.member_no IS
    'member number';

COMMENT ON COLUMN review.resort_id IS
    'Unique id for each resort in the town';

COMMENT ON COLUMN review.review_rating IS
    'The rating of each review';

COMMENT ON COLUMN review.review_comment IS
    'Member review comment for POI
';

COMMENT ON COLUMN review.poi_id IS
    'Surrogate key of POI';

ALTER TABLE review ADD CONSTRAINT review_pk PRIMARY KEY ( review_id );

ALTER TABLE review
    ADD CONSTRAINT review_nk UNIQUE ( review_datetime,
                                      member_no,
                                      resort_id );

CREATE TABLE town (
    town_id          CHAR(4) NOT NULL,
    town_latitude    NUMBER(10, 7) NOT NULL,
    town_longitude   NUMBER(10, 7) NOT NULL,
    town_name        VARCHAR2(20) NOT NULL,
    town_population  NUMBER(9) NOT NULL,
    town_summer_temp NUMBER(2) NOT NULL,
    town_winter_temp NUMBER(2) NOT NULL,
    town_state       CHAR(3) NOT NULL
);

COMMENT ON COLUMN town.town_id IS
    'Unique id for each town';

COMMENT ON COLUMN town.town_latitude IS
    'town latitude';

COMMENT ON COLUMN town.town_longitude IS
    'town longitude';

COMMENT ON COLUMN town.town_name IS
    'the name of town';

COMMENT ON COLUMN town.town_population IS
    'the population of the town';

COMMENT ON COLUMN town.town_summer_temp IS
    'Average temperature for summer, stored in celcius, rounded to nearest degree.';

COMMENT ON COLUMN town.town_winter_temp IS
    'Average temperature for winter, stored in celcius, rounded to nearest degree.';

COMMENT ON COLUMN town.town_state IS
    'Town code in three-letter format';

ALTER TABLE town ADD CONSTRAINT town_pk PRIMARY KEY ( town_id );

CREATE TABLE unit (
    unit_no          NUMBER(4) NOT NULL,
    resort_id        NUMBER(7) NOT NULL,
    unit_type        VARCHAR2(20) NOT NULL,
    unit_capacity    CHAR(2) NOT NULL,
    unit_description VARCHAR2(50) NOT NULL,
    unit_bedroom     CHAR(2) NOT NULL
);

COMMENT ON COLUMN unit.unit_no IS
    'The unique number for each unit in a resort';

COMMENT ON COLUMN unit.resort_id IS
    'Unique id for each resort in the town';

COMMENT ON COLUMN unit.unit_type IS
    'The type of a unit';

COMMENT ON COLUMN unit.unit_capacity IS
    'The units sleeping capacity';

COMMENT ON COLUMN unit.unit_description IS
    'The description of a unit';

COMMENT ON COLUMN unit.unit_bedroom IS
    'The number of bedrooms';

ALTER TABLE unit ADD CONSTRAINT unit_pk PRIMARY KEY ( unit_no,
                                                      resort_id );

ALTER TABLE booking
    ADD CONSTRAINT booking_unit FOREIGN KEY ( unit_no,
                                              resort_id )
        REFERENCES unit ( unit_no,
                          resort_id );

ALTER TABLE resort
    ADD CONSTRAINT company_rsort FOREIGN KEY ( comp_abn )
        REFERENCES company ( comp_abn );

ALTER TABLE holiday_rate
    ADD CONSTRAINT holiday_rate_unit FOREIGN KEY ( unit_no,
                                                   resort_id )
        REFERENCES unit ( unit_no,
                          resort_id );

ALTER TABLE poi
    ADD CONSTRAINT interest_point_town FOREIGN KEY ( town_id )
        REFERENCES town ( town_id );

ALTER TABLE member
    ADD CONSTRAINT member_member FOREIGN KEY ( member_no1,
                                               resort_id1 )
        REFERENCES member ( member_no,
                            resort_id );

ALTER TABLE membership_fee
    ADD CONSTRAINT member_membership_fee FOREIGN KEY ( member_no,
                                                       resort_id )
        REFERENCES member ( member_no,
                            resort_id );

ALTER TABLE review
    ADD CONSTRAINT member_review FOREIGN KEY ( member_no,
                                               resort_id )
        REFERENCES member ( member_no,
                            resort_id );

ALTER TABLE member
    ADD CONSTRAINT memebr_resort FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE review
    ADD CONSTRAINT poi_review FOREIGN KEY ( poi_id )
        REFERENCES poi ( poi_id );

ALTER TABLE booking
    ADD CONSTRAINT relation_18 FOREIGN KEY ( member_no,
                                             resort_id1 )
        REFERENCES member ( member_no,
                            resort_id );

ALTER TABLE unit
    ADD CONSTRAINT relation_20 FOREIGN KEY ( resort_id )
        REFERENCES resort ( resort_id );

ALTER TABLE resort
    ADD CONSTRAINT town_resort FOREIGN KEY ( town_id )
        REFERENCES town ( town_id );

ALTER TABLE resort_maintenance
    ADD CONSTRAINT unit_resort_maintenance FOREIGN KEY ( unit_no,
                                                         resort_id )
        REFERENCES unit ( unit_no,
                          resort_id );



-- Oracle SQL Developer Data Modeler Summary Report: 
-- 
-- CREATE TABLE                            11
-- CREATE INDEX                             0
-- ALTER TABLE                             33
-- CREATE VIEW                              0
-- ALTER VIEW                               0
-- CREATE PACKAGE                           0
-- CREATE PACKAGE BODY                      0
-- CREATE PROCEDURE                         0
-- CREATE FUNCTION                          0
-- CREATE TRIGGER                           0
-- ALTER TRIGGER                            0
-- CREATE COLLECTION TYPE                   0
-- CREATE STRUCTURED TYPE                   0
-- CREATE STRUCTURED TYPE BODY              0
-- CREATE CLUSTER                           0
-- CREATE CONTEXT                           0
-- CREATE DATABASE                          0
-- CREATE DIMENSION                         0
-- CREATE DIRECTORY                         0
-- CREATE DISK GROUP                        0
-- CREATE ROLE                              0
-- CREATE ROLLBACK SEGMENT                  0
-- CREATE SEQUENCE                          0
-- CREATE MATERIALIZED VIEW                 0
-- CREATE MATERIALIZED VIEW LOG             0
-- CREATE SYNONYM                           0
-- CREATE TABLESPACE                        0
-- CREATE USER                              0
-- 
-- DROP TABLESPACE                          0
-- DROP DATABASE                            0
-- 
-- REDACTION POLICY                         0
-- TSDP POLICY                              0
-- 
-- ORDS DROP SCHEMA                         0
-- ORDS ENABLE SCHEMA                       0
-- ORDS ENABLE OBJECT                       0
-- 
-- ERRORS                                   0
-- WARNINGS                                 0


SPOOL OFF
SET ECHO OFF
